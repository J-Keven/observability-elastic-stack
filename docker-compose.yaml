version: '3'

services: 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
      # - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks: 
        - observability

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks: 
      - observability
  
  apm:
    image: docker.elastic.co/apm/apm-server-oss:7.13.0
    user: root
    container_name: apm
    # volumes:      
    # - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports:
      - "8200:8200"
    restart: on-failure
    networks: 
      - observability

  api:
    build: ./api
    container_name: api_service
    volumes: 
      - ./api/:/usr/node/app
    networks: 
      - observability

  nginx:
    build: ./nginx
    container_name: nginx
    networks: 
      - observability
    ports: 
      - 8080:80

  frontend:
    build: ./frontend
    container_name: frontend_service
    volumes: 
      - ./frontend:/usr/node/app
    ports: 
      - 3000:3000
    networks: 
      - observability

networks: 
  observability:
    driver: bridge
    